from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery

from config import admins, channels
from filters import Users, Admin
from keyboard.default.done import done_sending
from keyboard.inline.confirm_button import confirm, offer
from loader import dp, bot
from states.state_for_channel import Get


# –û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É


@dp.callback_query_handler(text="offerpost")
async def offer_post(call: types.CallbackQuery):
    await call.message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –≥–∏—Ñ–∫—É –∏–ª–∏ –∞–ª—å–±–æ–º –ø–æ—Å—Ç–∞üòÅ")
    await Get.EnterMedia.set()


# –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–¥–∏–∞ –¥–ª—è –º–µ–º–∞


@dp.message_handler(Users(), state=Get.EnterMedia, content_types=types.ContentType.ANY)
async def get_photo_mem(message: types.Message, state: FSMContext):
    if message.content_type == types.ContentType.TEXT:
        await message.answer("–°—É–ø–µ—Ä. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –≥–∏—Ñ–∫—É –∏–ª–∏ –∞–ª—å–±–æ–º –º–µ–º–∞üò°")
        return

    if message.content_type == types.ContentType.PHOTO:
        await state.update_data(photo=message.photo[-1].file_id)
    if message.content_type == types.ContentType.VIDEO:
        await state.update_data(video=message.video.file_id)
    if message.content_type == types.ContentType.ANIMATION:
        await state.update_data(gif=message.animation.file_id)
    await message.answer('–û—Ç–ª–∏—á–Ω–æ. –µ—Å–ª–∏ —ç—Ç–æ –≤—Å–µ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–≥–æ—Ç–æ–≤–æ"', reply_markup=done_sending)


# –ö–Ω–æ–ø–∫–∞ –≥–æ—Ç–æ–≤–æ


@dp.message_handler(Users(), state=Get.EnterMedia, text="–ì–æ—Ç–æ–≤–æ‚úÖ")
async def get_photo_mem(message: types.Message, state: FSMContext):
    await message.answer("–°—É–ø–µ—Ä. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞üóí")
    await Get.EnterText.set()


# –£—Ç–æ—á–Ω–µ–Ω–∏–µ


@dp.message_handler(Users(), state=Get.EnterText)
async def get_text_for_post(message: types.Message, state: FSMContext):
    await message.answer("–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω‚úÖ\n–¢–µ–ø–µ—Ä—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏ –ø—É–±–ª–∏–∫—Ü–∏—é, –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ"
                         " –ø–æ—Å—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é")
    await state.update_data(text=message.html_text, mention=message.from_user.mention,
                            notify=message.chat.id)
    await message.answer("–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç?ü§®", reply_markup=confirm)
    await Get.Confirm.set()


# –û—Ç–≤–µ—Ç –Ω–∞ —É—Ç–æ—á–Ω–µ–Ω–∏–µ


@dp.callback_query_handler(state=Get.Confirm, text="Yes")
async def poster(call: CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        mention = data.get("mention")
        text = data.get("text")
        if data.get("photo"):
            photo = data.get("photo")
            await bot.send_message(chat_id=admins[0], text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {mention} —Ö–æ—á–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –º–µ–º:")
            await bot.send_photo(chat_id=admins[0], photo=photo, caption=text, reply_markup=offer)
        if data.get("video"):
            video = data.get("video")
            await bot.send_message(chat_id=admins[0], text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {mention} —Ö–æ—á–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –º–µ–º:")
            await bot.send_video(chat_id=admins[0], video=video, caption=text, reply_markup=offer)
        if data.get("gif"):
            gif = data.get("gif")
            await bot.send_message(chat_id=admins[0], text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {mention} —Ö–æ—á–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –º–µ–º:")
            await bot.send_animation(chat_id=admins[0], animation=gif, caption=text, reply_markup=offer)
    await call.answer("–ú–µ–º –æ—Ç–ø—Ä–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É,"
                      "—Å–ø–∞—Å–∏–±–æ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—åü§ü", show_alert=True)

    await call.message.edit_reply_markup()
    await state.finish()


@dp.callback_query_handler(state=Get.Confirm, text="No")
async def poster(call: CallbackQuery, state: FSMContext):
    await call.answer("Me–º –±—ã–ª –æ—Ç–º–µ–Ω—ë–Ω, –æ—á–µ–Ω –∂–∞–ª—å –°–µ–Ω—Å–µ–π —Ä–∞—Å—Å—Ç—Ä–æ–ª—Å—èüòî", show_alert=True)
    await call.message.edit_reply_markup()
    await state.finish()


# –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± —É—Ç–æ—á–Ω–µ–Ω–∏–µ


@dp.callback_query_handler(state=Get.Confirm)
async def poster(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ "–î–∞" –∏–ª–∏ "–ù–µ—Ç"')


# For Admins


@dp.callback_query_handler(Admin(), text="approve")
async def approve(call: CallbackQuery, state: FSMContext):
    message = await call.message.edit_reply_markup()
    await message.send_copy(chat_id=channels[0])
    await call.answer(text="Me–º –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω, –°–µ–Ω—Å–µ–π —Å–ø–æ–∫–æ–µ–Ωüòåüëå", show_alert=True)
    await state.finish()


@dp.callback_query_handler(Admin(), text="disapprove")
async def disapprove(call: CallbackQuery, state: FSMContext):
    await call.message.edit_reply_markup()
    await call.answer(text="–ú–µ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω, –°–µ–Ω—Å–µ–π —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ωüòíüòê", show_alert=True)
    await state.finish()
